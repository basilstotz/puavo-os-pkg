#!/bin/sh

set -eu

command=$1
shift

wrapper_script_path=/usr/local/bin/casio-classpad-ii

install_wrapper_script() {
  cat <<'EOF' > "$wrapper_script_path"
#!/bin/sh

installer_exe_path='/usr/share/puavo-pkg/installers/casio_classpad_ii_installer.exe'

link_wineprefix=~/.wine-puavo-casio-classpad-ii
version_wineprefix="${link_wineprefix}-v2_01_2000"

program_exe_dir="drive_c/Program Files/CASIO/ClassPad Manager Subscription for ClassPad II"
program_exe_name='ClassPadManagerSubscriptionForClassPadII.exe'
program_exe_path="${program_exe_dir}/${program_exe_name}"

export WINEARCH=win32

# we should support:
#   1. installing a new version
#   2. updating an old version to a new version (safely!)
#   3. allowing user to use the old version without nagging him/her
#      to update? (use a timestamp to periodically check for it?)
#   4. perhaps cleaning up old versions?

do_installation() {
  export WINEPREFIX="${version_wineprefix}.tmp"

  rm -rf "${version_wineprefix}.tmp"

  # if we have less than 2GB (2^31 bytes = 2147483648 bytes) available,
  # refuse to install
  available_diskspace=$(stat -f -c '%S * %a' "$HOME" | bc -l) || true
  if [ -z "$available_diskspace" \
    -o "$available_diskspace" -lt 2147483648 ]; then
      zenity --error --text 'not enough available diskspace for installation'
      return 1
  fi

  # if a copy exists of an old version, make a base copy for the new version
  # before attempting upgrade
  old_installation=$(readlink "$link_wineprefix" 2>/dev/null) || true
  if [ -d "$old_installation" ]; then
    last_old_installation_update_check=$(
      stat -c %Y "${old_installation}/.latest_update_check" 2>/dev/null || true)

    # if we have not bothered the user about updating in over a week,
    # bother again
    if [ -z "$last_old_installation_update_check" \
      -o "$last_old_installation_update_check" \
        -lt "$(($(date +%s) - 7*24*60*60))" ]; then
      touch "${old_installation}/.latest_update_check"
      msg='There is an update available for TI Nspire'
      if ! zenity --question --text "$msg" --cancel-label 'maybe later' \
        --ok-label 'UPDATE NOW'; then
          # user did not click 'UPDATE NOW'
          return 1
      fi
    fi

    rsync -a "$old_installation" "$version_wineprefix"
    # XXX should program_exe_path be removed so that update check is more
    # XXX reliable?  how should we check update was successful?
  fi

  zenity --error --text 'installing stuff'

  winetricks settings win7
  wine "$installer_exe_path"

  if [ ! -e "${WINEPREFIX}/${program_exe_path}" ]; then
    zenity --error --text 'error occurred during installation'
    exit 1
  fi

  # XXX should do atomically both
  mv "$WINEPREFIX" "$version_wineprefix"
  ln -fns "$(basename "$version_wineprefix")" "$link_wineprefix"
}

if [ ! -d "$version_wineprefix" ]; then
  do_installation || true
fi

export WINEPREFIX="$link_wineprefix"

cd "${WINEPREFIX}/${program_exe_dir}"
wine "$program_exe_name"
EOF
  chmod 755 "$wrapper_script_path"
}

case "$command" in
  configure)
    upstream_dir=$1
    mkdir -p /usr/share/puavo-pkg/installers
    ln -fns "${upstream_dir}/ClassPadManager_v2_01_2000_Windows/ClassPad Manager Subscription for ClassPad II Ver. 2.01.2000.exe" \
            /usr/share/puavo-pkg/installers/casio_classpad_ii_installer.exe
    install_wrapper_script
    ;;

  download)
    upstream_pack=$1
    curl --form-string 'ORG_TEA=' \
         --form-string 'OCCUPATION=student' \
         --form-string 'ORG_STU=Upper+secondary+school' \
         --form-string 'ORG_OTH=' \
         --form-string 'COUNTRY=Finland' \
         --form-string 'fn=' \
         --form-string 'dl_FILE_NO=19579' \
         --form-string 'LANGUAGE=1' \
         --form-string 'submit=Download' \
         --output "$upstream_pack" \
      https://edu.casio.com/freetrial/en/download.php
    ;;

  unconfigure)
    rm -f /usr/local/bin/casio-classpad-ii \
          /usr/share/puavo-pkg/installers/casio_classpad_ii_installer.exe
    ;;

  unpack)
    upstream_pack=$1
    upstream_dir=$2
    unzip -d "$upstream_dir" "$upstream_pack"
    ;;

  *)
    ;;
esac
